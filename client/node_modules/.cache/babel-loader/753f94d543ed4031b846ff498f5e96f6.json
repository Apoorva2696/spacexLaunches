{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apoorva.srivastava/Desktop/devConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/apoorva.srivastava/Desktop/devConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectDestructuringEmpty from\"/Users/apoorva.srivastava/Desktop/devConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";import{REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR}from\"../actions/types\";import{setAlert}from'../actions/alerts';import axios from'axios';import setAuthToken from\"../utils/setAuthTokens\";//load User\nexport var loadUser=function loadUser(_ref){_objectDestructuringEmpty(_ref);return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(localStorage.token){setAuthToken(localStorage.token);}_context.prev=1;_context.next=4;return axios.get('/api/auth');case 4:res=_context.sent;dispatch({type:USER_LOADED,payload:res.data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch({type:AUTH_ERROR});case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x){return _ref2.apply(this,arguments);};}();};// Register user\nexport var register=function register(_ref3){var name=_ref3.name,email=_ref3.email,password=_ref3.password;return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,body,res,errors;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({name:name,email:email,password:password});_context2.prev=2;_context2.next=5;return axios.post('/api/users',body,config);case 5:res=_context2.sent;dispatch({type:REGISTER_SUCCESS,payload:res.data});_context2.next=14;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](2);errors=_context2.t0.response.data.errors;if(errors){errors.forEach(function(error){return dispatch(setAlert(error.msg,'danger'));});}dispatch({type:REGISTER_FAIL});case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[2,9]]);}));return function(_x2){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/apoorva.srivastava/Desktop/devConnector/client/src/actions/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAlert","axios","setAuthToken","loadUser","dispatch","localStorage","token","get","res","type","payload","data","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg"],"mappings":"uhBAAA,OACIA,gBADJ,CACsBC,aADtB,CACqCC,WADrC,CACkDC,UADlD,KAEO,kBAFP,CAGA,OAASC,QAAT,KAAyB,mBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CAEA;AACA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,uIAAQ,iBAAMC,QAAN,0HAC5B,GAAGC,YAAY,CAACC,KAAhB,CAAuB,CACnBJ,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ,CACH,CAH2B,sCAONL,CAAAA,KAAK,CAACM,GAAN,CAAU,WAAV,CAPM,QAOlBC,GAPkB,eASxBJ,QAAQ,CAAC,CACLK,IAAI,CAAEX,WADD,CAELY,OAAO,CAAEF,GAAG,CAACG,IAFR,CAAD,CAAR,CATwB,+EAcxBP,QAAQ,CAAC,CACLK,IAAI,CAAEV,UADD,CAAD,CAAR,CAdwB,oEAAR,iEAAjB,CAoBP;AACA,MAAO,IAAMa,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,WAAGC,CAAAA,IAAH,OAAGA,IAAH,CAAUC,KAAV,OAAUA,KAAV,CAAiBC,QAAjB,OAAiBA,QAAjB,iGAAgC,kBAAMX,QAAN,iJAE9CY,MAF8C,CAErC,CACXC,OAAO,CAAE,CACL,eAAgB,kBADX,CADE,CAFqC,CAQ9CC,IAR8C,CAQvCC,IAAI,CAACC,SAAL,CAAe,CAAEP,IAAI,CAAJA,IAAF,CAAQC,KAAK,CAALA,KAAR,CAAeC,QAAQ,CAARA,QAAf,CAAf,CARuC,yCAY9Bd,CAAAA,KAAK,CAACoB,IAAN,CAAW,YAAX,CAAyBH,IAAzB,CAA+BF,MAA/B,CAZ8B,QAY1CR,GAZ0C,gBAchDJ,QAAQ,CAAC,CACLK,IAAI,CAAEb,gBADD,CAELc,OAAO,CAAEF,GAAG,CAACG,IAFR,CAAD,CAAR,CAdgD,mFAmB1CW,MAnB0C,CAmBjC,aAAIC,QAAJ,CAAaZ,IAAb,CAAkBW,MAnBe,CAqBhD,GAAIA,MAAJ,CAAa,CACTA,MAAM,CAACE,OAAP,CAAe,SAACC,KAAD,QAAUrB,CAAAA,QAAQ,CAACJ,QAAQ,CAACyB,KAAK,CAACC,GAAP,CAAY,QAAZ,CAAT,CAAlB,EAAf,EACH,CAEDtB,QAAQ,CAAC,CACLK,IAAI,CAAEZ,aADD,CAAD,CAAR,CAzBgD,sEAAhC,kEAAjB","sourcesContent":["import {\n    REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR \n} from \"../actions/types\";\nimport { setAlert } from '../actions/alerts';\nimport axios from 'axios';\nimport setAuthToken from \"../utils/setAuthTokens\";\n\n//load User\nexport const loadUser = ({}) => async dispatch => {\n    if(localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n\n    try{\n\n        const res = await axios.get('/api/auth');\n\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch(err) {\n        dispatch({\n            type: AUTH_ERROR\n        })\n    }\n};\n\n// Register user\nexport const register = ({ name , email, password }) => async dispatch => {\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ name, email, password });\n\n    try{\n\n        const res = await axios.post('/api/users', body, config);\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n    } catch(err) {\n        const errors = err.response.data.errors;\n\n        if( errors ) {\n            errors.forEach((error)=> dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n\n};\n"]},"metadata":{},"sourceType":"module"}