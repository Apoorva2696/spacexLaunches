{"version":3,"sources":["components/Cards.js","components/Filters.js","components/Landing.js","App.js","index.js"],"names":["Cards","props","filters","useState","res","setRes","isFetching","setFetching","useEffect","_params","Object","keys","length","queryString","stringify","a","axios","get","_res","getData","then","data","window","history","replaceState","className","map","val","index","key","item","mission_name","alt","src","links","mission_patch","width","height","flight_number","mission_id","mission","launch_year","launch_success","toString","rocket","first_stage","cores","land_success","FILTERS","id","name","options","title","value","Filters","selectedFilters","onClick","filter","option","_selectedValue","_className","Landing","setFilters","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8fdeb0e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport axios from 'axios';\n\n\nexport const Cards = ( props ) => {\n\n    const { filters } = props;\n    const [res, setRes] = useState({});\n    const[isFetching, setFetching] = useState(false);\n\n    useEffect( () => {\n    const _params = 0 !== Object.keys( filters ).length ? `?${ queryString.stringify(filters) }`: null;\n\n    const getData = async () => {\n        setFetching(true);\n        let _res = await axios.get(`https://api.spacexdata.com/v3/launches?limit=100${_params}`);\n        return _res;\n    };\n\n    getData().then( ( data ) => {\n\n        if( null !== _params ) {\n            window.history.replaceState( filters, 'params', `${_params}`);\n        };\n\n        setFetching(false);\n        setRes( data );\n    } );\n\n    }, [ filters ] )\n\n    if( 0 !== Object.keys( res ).length && !isFetching ) {\n    return (\n        <div className='cards__container'>\n            {\n            0 < res.data.length ? res.data.map( ( item, index ) => {\n            \n                return(\n                <div className='cards__container__card' key={`${item.mission_name}_${index}`}>\n                    <img className='cards__container__card__icon' alt='Mission Logo' src={item.links.mission_patch} width='80%' height='60%'/>\n                    <div className='cards__container__card__info'>\n                    <div className='cards__container__card__info__title'>{`${item.mission_name} # ${item.flight_number}`}</div>\n                    <div className='cards__container__card__info__item'>\n                        <span className='cards__container__card__info__item__key'>\n                        Mission Ids : \n                        </span>\n                        <ul className='cards__container__card__info__item__list'>\n                        {\n                            item.mission_id.map( ( mission ) => {\n                            return(\n                                <li className='cards__container__card__info__item__value' key={mission}> {mission}</li>\n                            );\n                            } )\n                        }\n                        </ul>\n                    </div>\n                    <div className='cards__container__card__info__item'>\n                        <span className='cards__container__card__info__item__key'>\n                        Launch Year : \n                        </span>\n                        <span className='cards__container__card__info__item__value'>\n                        {item.launch_year}\n                        </span>\n                    </div>\n                    <div className='cards__container__card__info__item'>\n                        <span className='cards__container__card__info__item__key'>\n                        Successful Launch : \n                        </span>\n                        <span className='cards__container__card__info__item__value'>\n                        { null === item.launch_success ? 'null':item.launch_success.toString() }\n                        </span>\n                    </div>\n                    <div className='cards__container__card__info__item'>\n                    <span className='cards__container__card__info__item__key'>\n                        Successful Landing :\n                        </span>\n                        <span className='cards__container__card__info__item__value'>\n                        { null === item.rocket.first_stage.cores[0].land_success ? 'null':item.rocket.first_stage.cores[0].land_success.toString() }\n                        </span>\n                    </div>\n                    </div>\n                </div>\n                );\n            }) : <div className='no-data'>No Data Found</div>\n            }\n        </div>\n    );\n    } else if( isFetching ){\n    return(\n        <div className='cards__container'>\n        {\n            [1,2,3,4].map( (val,index) => {\n            return( <div className='cards__container__card__preloader' key={index}>\n                <div className='cards__container__card__icon__preloader'></div>\n                <div className='cards__container__card__info__preloader'></div>\n                <div className='cards__container__card__info__preloader'></div>\n                <div className='cards__container__card__info__preloader'></div>\n            </div> );\n            } )\n        }\n        </div>\n    );\n    } else return null;\n}\n\nexport default Cards;","import React from 'react';\n\n//filters data\nconst FILTERS = [\n    {\n        id: 'launch_year',\n        name: 'Launch Year',\n        options: [\n            {\n                title: '2006',\n                value: '2006'\n            },\n            {\n                title: '2007',\n                value: '2007'\n            },\n            {\n                title: '2008',\n                value: '2008'\n            },\n            {\n                title: '2009',\n                value: '2009'\n            },\n            {\n                title: '2010',\n                value: '2010'\n            },\n            {\n                title: '2011',\n                value: '2011'\n            },\n            {\n                title: '2012',\n                value: '2012'\n            },\n            {\n                title: '2013',\n                value: '2013'\n            },\n            {\n                title: '2014',\n                value: '2014'\n            },\n            {\n                title: '2015',\n                value: '2015'\n            },\n            {\n                title: '2016',\n                value: '2016'\n            },\n            {\n                title: '2017',\n                value: '2017'\n            },\n            {\n                title: '2018',\n                value: '2018'\n            },\n            {\n                title: '2019',\n                value: '2019'\n            },\n            {\n                title: '2020',\n                value: '2020'\n            }\n        ]\n    },\n    {\n        id: 'launch_success',\n        name: 'Successful Launch',\n        options: [\n            {\n                title: 'True',\n                value: 'true'\n            },\n            {\n                title: 'False',\n                value: 'false'\n            }\n        ]\n    },\n    {\n        id: 'land_success',\n        name: 'Successful Landing',\n        options: [\n            {\n                title: 'True',\n                value: 'true'\n            },\n            {\n                title: 'False',\n                value: 'false'\n            }\n        ]\n    }\n];\n\n// no-op  function\nconst noop = function() {};\n\nconst Filters = ( props ) => {\n    const selectedFilters = props.filters;\n    return(\n        <div className='filters-container'>\n            <h2>Filters</h2>\n            <span className='filters-container__action' onClick={ () => { props.onClick( {} ) } }>Clear</span>\n            {\n                FILTERS.map( ( filter, index ) => {\n                    return(\n                        <div className='filters-container__filter' key={ `${filter.name}__${index}`}>\n                            <div className='filters-container__filter__title'>{filter.name}</div>\n                            <div className='filters-container__filter__list'>\n                                {\n                                    filter.options.map( ( option, index ) => {\n                                        const _selectedValue = selectedFilters[ filter.id ] ? selectedFilters[ filter.id ]:null;\n\n                                        const _className = _selectedValue !== option.value ? 'filters-container__filter__list__item': 'filters-container__filter__list__item filters-container__filter__list__item--selected'\n                                        return(\n                                            <button\n                                                key={`${filter.name}__${index}`}\n                                                className={_className}\n                                                onClick={\n                                                    () => {\n                                                        _selectedValue !== option.value ?\n                                                            props.onClick( { ...props.filters, [ filter.id ]: option.value } ): noop()\n                                                        }\n                                                }\n                                            >\n                                                {option.title}\n                                            </button>\n                                        );\n                                    })\n                                }\n                            </div>\n                        </div>\n                    );\n                } )\n            }\n        </div>\n    );\n};\n\nexport default Filters;","import React, { useState, Fragment } from 'react'\nimport Cards from './Cards';\nimport Filters from './Filters';\n\nexport const Landing = () => {\n  const [ filters, setFilters ] = useState({});\n\n  return(\n    <Fragment>\n      <Filters onClick={ setFilters } filters = { filters }/>\n      <Cards filters = { filters }/>\n    </Fragment>\n  );\n  \n}\n\nexport default Landing;","import React, { Fragment } from 'react';\nimport Landing from './components/Landing';\nimport './App.scss';\n\nconst App = () => {\n\n  return(\n    <Fragment>\n      <header className='header'>\n        <h1>SpaceX Launch Programs</h1>\n      </header>\n      <section className='container'>  \n        <Landing />\n        <footer className='footer'>Developed by: Apoorva Srivastava</footer>\n      </section>\n     \n    </Fragment>\n       \n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}